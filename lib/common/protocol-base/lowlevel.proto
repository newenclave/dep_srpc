package srpc.rpc;
option cc_generic_services = true;

import "errors.proto";
import "options.proto";

message call_info {
    enum type_enum {

        TYPE_NONE            = 0; // value for internal usage only

        TYPE_CLIENT_CALL     = 1; // from client
        TYPE_SERVER_CALL     = 2; // from server

        TYPE_CLIENT_CALLBACK = 3; // from client
        TYPE_SERVER_CALLBACK = 4; // from server

        TYPE_SERVICE         = 5; // internal
        TYPE_INTERNAL        = 6; // internal

    }

    enum flags_enum {
        FLAG_CALLBACK_ALONE  = 0x01;
    }

    optional uint32 call_type    = 1; //[default = 0]; // @message_type_enum
    optional uint32 call_flags   = 2; //[default = 0]; // @message_flags_enum

}

message call_name {
    optional bytes service_id = 1;
    optional bytes method_id  = 2;
}

message lowlevel {

    // --- header --- //
    optional uint64                         id  = 1;
    optional uint64                  target_id  = 2;
    optional call_info                    info  = 3;
    optional call_name                    call  = 4;
    optional srpc.rpc.errors.container   error  = 5;
    optional srpc.rpc.options.lowlevel     opt  = 6;
    optional bytes                channel_data  = 7; // some optional data from
                                                     // the OTHER side!
    optional bytes               lowlevel_data  = 8; // some optional data
                                                     // proto lowlevel can use

    // --- //
    optional bytes  request = 20;
    optional bytes response = 21;
}

